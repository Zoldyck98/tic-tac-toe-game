{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Escritorio/Proyectos de react/tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  const boardRows = [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n    clasName: \"board-row\",\n    children: [0, 1, 2].map(col => {\n      const idx = row * 3 + col;\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[idx],\n        onSquareClick: () => handleClick(idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    })\n  }, row, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [reverseMoves, setReverseMoves] = useState(false);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleMoveOrder(arr) {\n    return arr.slice().reverse();\n  }\n  const movesArray = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", move === currentMove ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentMove > 0 ? \"Estás en el movimiento n.º\" + move : \"Estás en el inicio del juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, move, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  });\n  const moves = reverseMoves ? toggleMoveOrder(movesArray) : movesArray;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReverseMoves(!reverseMoves),\n        children: reverseMoves ? \"Mostrar movimientos en orden normal\" : \"Mostrar movimientos en orden inverso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"5j2gc2jMEvKGxnVxZgnCIsHNBx4=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winner","calculateWinner","status","handleClick","i","nextSquares","slice","boardRows","map","row","clasName","col","idx","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","reverseMoves","setReverseMoves","currentSquares","handlePlay","nextHistory","length","jumpTo","nextMove","toggleMoveOrder","arr","reverse","movesArray","move","description","moves","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/home/bryan/Escritorio/Proyectos de react/tic_tac_toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>);\n}\n\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  const boardRows = [0, 1, 2].map(row => (\n    <div clasName=\"board-row\" key={row}>\n      {[0, 1, 2].map(col => {\n        const idx = row * 3 + col;\n        return (\n          <Square\n            key={idx}\n            value={squares[idx]}\n            onSquareClick={() => handleClick(idx)}\n          />\n        );\n      })}\n    </div>\n  ))\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [reverseMoves, setReverseMoves] = useState(false);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleMoveOrder(arr) {\n    return arr.slice().reverse();\n  }\n\n  const movesArray = history.map((squares, move) => {\n    let description;\n    if (move > 0) {\n      description = \"Go to move #\" + move;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      <li key={move}> {move === currentMove\n        ? <span>\n          {currentMove > 0 ? \"Estás en el movimiento n.º\" + move : \"Estás en el inicio del juego\"}\n          </span>\n        : <button onClick={() => jumpTo(move)}>{description}</button>\n      }\n      </li>\n    );\n  });\n\n  const moves = reverseMoves ? toggleMoveOrder(movesArray) : movesArray;\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <button onClick ={() => setReverseMoves(!reverseMoves)}>\n          {reverseMoves ? \"Mostrar movimientos en orden normal\" : \"Mostrar movimientos en orden inverso\"}\n        </button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}