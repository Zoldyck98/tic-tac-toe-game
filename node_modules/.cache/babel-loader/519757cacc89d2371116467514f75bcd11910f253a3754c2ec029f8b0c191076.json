{"ast":null,"code":"var _jsxFileName = \"/home/bryan/Escritorio/Proyectos de react/tic_tac_toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isWinning\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `square ${isWinning ? \"square-winning\" : \"\"}`,\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const result = calculateWinner(squares);\n  let status;\n  let winningLine = [];\n  if (result) {\n    status = \"Winner: \" + result.winner;\n    winningLine = result.line;\n  } else if (squares.every(square => square !== null)) {\n    status = \"Empate\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function handleClick(i) {\n    if (squares[i] || result) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares, i);\n  }\n  const boardRows = [0, 1, 2].map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n    clasName: \"board-row\",\n    children: [0, 1, 2].map(col => {\n      const idx = row * 3 + col;\n      const isWinning = winningLine.includes(idx);\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[idx],\n        onSquareClick: () => handleClick(idx),\n        isWinning: isWinning\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, row, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [reverseMoves, setReverseMoves] = useState(false);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  function handlePlay(nextSquares, moveIdx) {\n    const nextHistory = [...history.slice(0, currentMove + 1), {\n      squares: nextSquares,\n      moveIdx\n    }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleMoveOrder(arr) {\n    return arr.slice().reverse();\n  }\n  const movesArray = history.map((step, move) => {\n    let description;\n    if (move > 0) {\n      const idx = step.moveIdx;\n      const row = Math.floor(idx / 3) + 1;\n      const col = idx % 3 + 1;\n      description = `Go to move # ${move} (${row}, ${col})`;\n    } else {\n      description = \"Go to game start\";\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", move === currentMove ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: currentMove > 0 ? \"Estás en el movimiento n.º\" + move : \"Estás en el inicio del juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, move, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  });\n  const moves = reverseMoves ? toggleMoveOrder(movesArray) : movesArray;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReverseMoves(!reverseMoves),\n        children: reverseMoves ? \"Mostrar movimientos en orden normal\" : \"Mostrar movimientos en orden inverso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"5j2gc2jMEvKGxnVxZgnCIsHNBx4=\");\n_c3 = Game;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        winner: squares[a],\n        line: [a, b, c]\n      };\n    }\n  }\n  return null;\n}\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isWinning","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","result","calculateWinner","status","winningLine","winner","line","every","square","handleClick","i","nextSquares","slice","boardRows","map","row","clasName","col","idx","includes","_c2","Game","_s","history","setHistory","Array","fill","currentMove","setCurrentMove","reverseMoves","setReverseMoves","currentSquares","handlePlay","moveIdx","nextHistory","length","jumpTo","nextMove","toggleMoveOrder","arr","reverse","movesArray","step","move","description","Math","floor","moves","_c3","lines","a","b","c","$RefreshReg$"],"sources":["/home/bryan/Escritorio/Proyectos de react/tic_tac_toe/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction Square({ value, onSquareClick, isWinning }) {\n  return (\n    <button\n      className={`square ${isWinning ? \"square-winning\" : \"\"}`}\n      onClick={onSquareClick}>\n      {value}\n    </button>);\n}\n\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const result = calculateWinner(squares);\n  let status;\n  let winningLine = [];\n  if (result) {\n    status = \"Winner: \" + result.winner;\n    winningLine = result.line;\n  } else if (squares.every(square => square !== null)) {\n    status = \"Empate\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  function handleClick(i) {\n    if (squares[i] || result) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares, i);\n  }\n\n  const boardRows = [0, 1, 2].map(row => (\n    <div clasName=\"board-row\" key={row}>\n      {[0, 1, 2].map(col => {\n        const idx = row * 3 + col;\n        const isWinning = winningLine.includes(idx);\n        return (\n          <Square\n            key={idx}\n            value={squares[idx]}\n            onSquareClick={() => handleClick(idx)}\n            isWinning={isWinning}\n          />\n        );\n      })}\n    </div>\n  ))\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n    </>\n  );\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const [reverseMoves, setReverseMoves] = useState(false);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n\n\n  function handlePlay(nextSquares, moveIdx) {\n    const nextHistory = [\n      ...history.slice(0, currentMove + 1), { squares: nextSquares, moveIdx }];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleMoveOrder(arr) {\n    return arr.slice().reverse();\n  }\n\n  const movesArray = history.map((step, move) => {\n    let description;\n    if (move > 0) {\n      const idx = step.moveIdx;\n      const row = Math.floor(idx / 3) + 1;\n      const col = (idx % 3) + 1;\n      description = `Go to move # ${move} (${row}, ${col})`;\n    } else {\n      description = \"Go to game start\";\n    }\n    return (\n      <li key={move}> {move === currentMove\n        ? <span>\n          {currentMove > 0 ? \"Estás en el movimiento n.º\" + move \n          : \"Estás en el inicio del juego\"}\n        </span>\n        : <button onClick={() => jumpTo(move)}>{description}</button>\n      }\n      </li>\n    );\n  });\n\n  const moves = reverseMoves ? toggleMoveOrder(movesArray) : movesArray;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <button onClick={() => setReverseMoves(!reverseMoves)}>\n          {reverseMoves ? \"Mostrar movimientos en orden normal\" : \"Mostrar movimientos en orden inverso\"}\n        </button>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return { winner: squares[a], line: [a, b, c] };\n    }\n  }\n\n  return null;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}